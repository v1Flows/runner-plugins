name: Check Plugin Build

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches: [ "release/**", "develop" ]
    paths-ignore:
      - '.github/**'

jobs:
  list-plugins:
    name: List Plugins
    runs-on: ubuntu-latest
    outputs:
      action-plugins: ${{ steps.list-action.outputs.plugins }}
      endpoint-plugins: ${{ steps.list-endpoint.outputs.plugins }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List Action Plugins
        id: list-action
        run: |
          PLUGINS=$(find action-plugins -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | jq -R -s -c 'split("\n")[:-1]')
          if [ -z "$PLUGINS" ]; then
            echo "::set-output name=plugins::[]"
          else
            echo "::set-output name=plugins::$PLUGINS"
          fi

      - name: List Endpoint Plugins
        id: list-endpoint
        run: |
          PLUGINS=$(find endpoint-plugins -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | jq -R -s -c 'split("\n")[:-1]')
          if [ -z "$PLUGINS" ]; then
            echo "::set-output name=plugins::[]"
          else
            echo "::set-output name=plugins::$PLUGINS"
          fi

      - name: Debug Plugins
        run: |
          echo "Action Plugins: ${{ steps.list-action.outputs.plugins }}"
          echo "Endpoint Plugins: ${{ steps.list-endpoint.outputs.plugins }}"

  build-plugins:
    name: Build Plugins
    needs: list-plugins
    runs-on: ubuntu-latest
    strategy:
      matrix:
        plugin-type: [action-plugins, endpoint-plugins]
        plugin-name: ${{ fromJson(needs.list-plugins.outputs[plugin-type]) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'

      - name: Verify Directory
        run: |
          if [ ! -d "${{ matrix.plugin-type }}/${{ matrix.plugin-name }}" ]; then
            echo "Directory does not exist: ${{ matrix.plugin-type }}/${{ matrix.plugin-name }}"
            exit 1
          fi

      - name: Build Plugin
        working-directory: ${{ matrix.plugin-type }}/${{ matrix.plugin-name }}
        run: go build